<%- include('../layouts/nav.ejs')%>
<div class="container">
  <%- include('../layouts/navBlock.ejs') %>
  <div class="col-md-8 d-inline-block sticky-top mr-1 my-4 pb-2 float-right bg-light ">
        <%- include('groupAddTab.ejs') %>
  </div>
</div>
<footer class="footer fixed-bottom bg-dark mt-4">
      <div class="container">
          <span class="text-muted">Place sticky footer content here.</span>
      </div>
</footer>
    <div class="modal fade" id="warningModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h3 class="modal-title" id="exampleModalLabel">Ошибка!</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <p><h4>Номер новой группы не может совпадать с номером уже существующей группы</h4></p>
          </div>
          <div class="modal-footer">
            <button class="btn btn-secondary"  data-dismiss="modal">OK</button>
          </div>
        </div>
      </div>
    </div>
<script>
  var $ = jQuery.noConflict();
  var groups;
  var surnames=['Смирнов', 'Иванов', 'Кузнецов', 'Соколов', 'Попов', 'Лебедев','Козлов', 'Новиков', 'Морозов', 'Петров', 'Волков', 'Соловьёв','Васильев', 'Зайцев', 'Павлов', 'Семёнов', 'Голубев', 'Виноградов','Богданов', 'Воробьёв', 'Фёдоров', 'Михайлов', 'Беляев', 'Тарасов', 'Белов']
  var names = ['Александр', 'Алексей', 'Андрей', 'Артем', 'Виктор', 'Даниил', 'Дмитрий', 'Егор','Илья', 'Кирилл', 'Максим', 'Марк', 'Михаил', 'Роман', 'Степан', 'Тимофей', 'Ярослав']
  document.addEventListener("DOMContentLoaded", function(event) {
    // Обработка евентов
    document.getElementById('gNum').addEventListener('change', function(){
      initTable();
    });
    document.getElementById('createGroup').addEventListener('change', function(){
      clearTable();
      document.getElementById('send-json').classList.remove("d-none");
      document.getElementById('gNum').classList.add("d-none");
      document.getElementById('gNumInput').classList.remove("d-none");
    });
    document.getElementById('upgradeGroup').addEventListener('change', function(){
      initTable();
      document.getElementById('send-json').classList.add("d-none");
      document.getElementById('gNum').classList.remove("d-none");
      document.getElementById('gNumInput').classList.add("d-none");
    });
    fetch('/groups/list')
      .then(response => response.json())
      .then(data => 
        {
          groups = data;
          var select = document.getElementById('gNum');
          for(index in data) {
              select.options[select.options.length] = new Option(data[index].gNum);
          }
          initTable();
        })
  });
  /*
    *       Отправка новой группы на сервер
    */
  document.getElementById('send-json').addEventListener('click',function(){
    var content = [];
    if(document.getElementById('gNumInput').value == ""){
      alert('Введите номер группы!');
      return;
    } 
    if(groups.filter(item=>
        {
          return (item.gNum===document.getElementById('gNumInput').value)
        }).length != 0){
      document.getElementById('gNumInput').value='';
      //alert('Номер новой группы не может совпадать с номером уже существующей группы');
      $('#warningModal').modal('toggle');
      return;
    }
    for(let tr of document.getElementsByTagName('tbody')[0].getElementsByTagName('tr')){
      content.push({
        name:tr.children[1].textContent,
        surname:tr.children[2].textContent,
        studentID:tr.children[3].textContent,
      });
    }
    fetch('/csrfToken')
      .then(response => response.json())
      .then(res => {
        msg = {
          data: 
            {
              gNum:document.getElementById('gNumInput').value,
              content:JSON.stringify(content),
            },
          _csrf: res._csrf
        };
        fetch('/groups/create',{
          method:'POST',
          body:JSON.stringify(msg),
        })
          .then(res => res.ok?'Ok':'Err')
          .then(answer => 
            {
              fetch('/groups/list')
              .then(response => response.json())
              .then(data => 
                {
                  groups = data;
                  document.getElementById('gNum').innerHTML = '';
                  var select = document.getElementById('gNum');
                  for(index in data) {
                      select.options[select.options.length] = new Option(data[index].gNum)
                  }
                });
              console.log(answer);
            })
          .catch(res => console.log(response))
      })
  });

  // формируем новые поля
  document.getElementById('addBtn').addEventListener("click", function(){
    let lastNumber, rows = document.getElementsByTagName('tbody')[0].rows.length;
    if(rows !== 0) lastNumber = rows;
    else lastNumber = 0;
    document.getElementsByTagName('tbody')[0].innerHTML +=
      `<tr>
        <th>${ lastNumber }</th> 
        <td>${document.getElementById('name').value     }</td> 
        <td>${document.getElementById('surname').value  }</td> 
        <td>${document.getElementById('studentID').value}</td> 
        <td class="d-none d-sm-block"><span class="btn btn-danger minus pull-center" id="minus"><i class="fas fa-trash-alt"></i></span></td> 
      </tr>`;
    document.getElementById('name').value = '';
    document.getElementById('surname').value = '';
    document.getElementById('studentID').value = '';
    if(document.getElementById('upgradeGroup').checked){
      let content=[];
      for(let tr of document.getElementsByTagName('tbody')[0].getElementsByTagName('tr')){
        content.push({
          name:tr.children[1].textContent,
          surname:tr.children[2].textContent,
          studentID:tr.children[3].textContent,
        });
      }
      /*for(let i = 0 ; i < 20 ; i++){
        content.push({
          name:names[getRandomInt(0, names.length)],
          surname:surnames[getRandomInt(0, surnames.length)],
          studentID:getRandomInt(0,1000000)
        })
      }*/
      fetch('/groups/update',{
        method:'POST',
        body:JSON.stringify({data: 
            {
              gNum:document.getElementById('gNum').value,
              content:JSON.stringify(content)
            }
        }),
      })
      .then(res => res.ok?'Ok':'Err')
      .then(answer => console.log(answer))
      .catch(res => console.log(response))
    }
  });
  /*
  *     Table updating  
   */
  function initTable(){
    clearTable();
    let table;
    let lastNumber = 0;
    groups.find(function(item, i){
      if(item.gNum==document.getElementById('gNum').options[document.getElementById('gNum').selectedIndex].value) table = JSON.parse(item.content);
    });
    let tableRow = document.createElement('tr');
    let th = tableRow.appendChild(document.createElement('th'));
    tableRow.appendChild(document.createElement('td'));
    tableRow.appendChild(document.createElement('td'));
    tableRow.appendChild(document.createElement('td'));
    table.forEach(function(item){
      document.getElementsByTagName('tbody')[0].innerHTML += 
        `<tr>
            <th>${ lastNumber++}</th>
            <td>${item.name}</td>
            <td>${item.surname}</td>
            <td>${item.studentID}</td>
            <td class="d-none d-sm-block"><span class="btn btn-danger minus pull-center"><i class="fas fa-trash-alt"></i></span></td>
          </tr>`;
    });
    for(let td of document.getElementsByClassName('minus')){
      td.addEventListener('click', function(){
        if(this.parentElement.parentElement.parentElement.lastElementChild == this.parentElement.parentElement){
          delRow(this.parentElement.parentElement.rowIndex-1);
          this.parentElement.parentElement.remove();
          
        }
        else{
          let el = this.parentElement.parentElement.nextSibling;
          delRow(this.parentElement.parentElement.rowIndex-1);
          this.parentElement.parentElement.remove()
          el.children[0].textContent = (parseInt(el.children[0].textContent)-1)
          while(el=el.nextSibling){
            el.children[0].textContent = (parseInt(el.children[0].textContent)-1)
          } 
        }
      });
    };
  }
  document.getElementById('gNumInput').addEventListener("change",function(val){
    if(groups.filter(item=>{return (item.gNum===val.target.value)}).length != 0){
      val.target.value='';
      //alert('Номер новой группы не может совпадать с номером уже существующей группы');
      $('#warningModal').modal('toggle');
    } 
  });

  function clearTable(){
    document.getElementsByTagName('tbody')[0].innerHTML = ''
  }

  function delRow(index){
    fetch('/csrfToken')
      .then(response => response.json())
      .then(res => {
        msg = {
          data: 
            {
              index: index,
              gNum:document.getElementById('gNum').selectedIndex,
            },
          _csrf: res._csrf
        };
        fetch('/groups/deleteElement',{
          method:'POST',
          body:JSON.stringify(msg),
        })
          .then(res => res.ok?'Ok':'Err')
          .then(answer => console.log(answer))
          .catch(res => console.log(response))
      })
  }
  function getRandomInt(min, max){
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }
</script>
